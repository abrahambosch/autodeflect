---
- name: Create banjax base directory
  file: path={{banjax_output}} state=directory mode=0755
  tags:
    - banjax
    - setup

- name: Create banjax dnet directories
  file: path={{banjax_output}}{{item.key}} state=directory mode=0755
  with_dict: dnets
  tags:
    - banjax
    - setup
 
- name: Create banjax.d dir
  file: path={{banjax_output}}/{{item.key}}/banjax.d state=directory mode=0755
  with_dict: dnets
  tags:
    - banjax
    - setup

- name: Banjax configuration file
  template: src=banjax.conf.j2 dest={{banjax_output}}/{{item.key}}/banjax.conf validate="python scripts/validate_yaml.py %s"
  with_dict: dnets
  tags: banjax

- name: banjax.d configuration file
  template:
    src: banjax.d.j2
    dest: "{{banjax_output}}/{{remap[item.key].network}}/banjax.d/{{item.key}}.bconf"
    validate: "python scripts/validate_yaml.py %s"
  when: (remap[item.key]["banjax_path"]) or
        (remap[item.key]["banjax_captcha"] is defined and remap[item.key]["banjax_captcha"]) or
        (remap[item.key]["banjax_sha_inv"] is defined and remap[item.key]["banjax_sha_inv"]) or
        (remap[item.key]["user_banjax_sha_inv"] is defined and remap[item.key]["user_banjax_sha_inv"]) or
        (remap[item.key]["banjax_regex_banner"] is defined)
  with_dict: remap
  tags:
    - banjax
    - banjaxd

- name: general.bconf
  template: src=general.dnets.bconf dest={{banjax_output}}/{{item.key}}/banjax.d/general.bconf validate="python scripts/validate_yaml.py %s"
  with_dict: dnets
  tags: banjax

- name: Whitelists template 
  template: src=whitelist.bconf.j2 dest={{banjax_output}}/{{item.key}}/banjax.d/whitelist.bconf validate="python scripts/validate_yaml.py %s"
  with_dict: dnets
  tags: [banjax, banjax_whitelist]
